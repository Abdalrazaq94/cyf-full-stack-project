version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:12.13.0

docker-e2e: &docker-e2e
  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Docker E2E
        command: docker-compose run e2e run e2e:run

jobs:
  deps:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Info
          command: 'echo "Node: $(node -v)" && echo "NPM: v$(npm -v)"'
      - run:
          name: Check Node
          command: |
            if [[ "$(node -v)" == "v$(cat .nvmrc)" ]]; \
            then echo 'Node version OK'; \
            else echo 'Node version mismatch' && exit 1; \
            fi
      - restore_cache:
          keys:
            - starter-kit-deps-{{ checksum "package-lock.json" }}
            - starter-kit-deps- # fallback
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: starter-kit-deps-{{ checksum "package-lock.json" }}
          paths:
            - "~/.cache"
            - "~/.npm"
  test:
    <<: *defaults
    environment:
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - checkout
      - restore_cache:
          keys:
            - starter-kit-deps-{{ checksum "package-lock.json" }}
            - starter-kit-deps- # fallback
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Lint source code
          command: npm run lint
      - run:
          name: Test source code
          command: npm run test
      - store_test_results:
          path: ./reports
  e2e:
    docker:
      - image: cypress/base:12.13.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - starter-kit-deps-{{ checksum "package-lock.json" }}
            - starter-kit-deps- # fallback
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: End-to-end test
          command: npm run e2e
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./e2e/screenshots
          destination: screenshots
  verify-carbon:
    environment:
      NODE_RELEASE: carbon
    <<: *defaults
    <<: *docker-e2e
  verify-dubnium:
    environment:
      NODE_RELEASE: dubnium
    <<: *defaults
    <<: *docker-e2e
    <<: *docker-e2e
  verify-erbium:
    environment:
      NODE_RELEASE: erbium
    <<: *defaults
    <<: *docker-e2e

workflows:
  build:
    jobs:
      - deps
      - test:
          requires:
            - deps
      - e2e:
          requires:
            - deps
            - test

  verify:
    jobs:
      - verify-carbon
      - verify-dubnium
      - verify-erbium
